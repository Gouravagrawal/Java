/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdminRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
//import Business.Enterprise.EnterpriseDirectory;
import Business.Network.Network;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author gourav
 */
public class ManageEnterpriseJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private Network network;

    /**
     * Creates new form ManageNetworkJPanel
     */
    public ManageEnterpriseJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        enterpriseTypeJComboBox.removeAllItems();
        populateCountryCombo();
        populateNetworkTree();
        populateEnterpriseType();

    }

    private void populateEnterpriseType() {
        for (Enterprise.EnterpriseType entType : Enterprise.EnterpriseType.values()) {
            if (!entType.equals(Enterprise.EnterpriseType.AMAZON)) {

                enterpriseTypeJComboBox.addItem(entType);
            }
        }
    }

    private void populateEnterpriseNetworkTable(Network n) {

//        for (Network country : system.getNetworkList())
//            for (Network state : country.getSubnetworklist())
//                for (Network city : state.getSubnetworklist())

        DefaultTableModel model = (DefaultTableModel) InfoJTable.getModel();
        model.setRowCount(0);
        for (Enterprise ent : n.getEnterpriseDirectory().getEnterpriseList()) {
            Object row[] = new Object[3];
            row[0] = ent.getName();
            row[1] = n.getNetworkname() + " , " + n.getNetworkname() + " , " + n.getNetworkname();
            row[2] = ent.getEnterpriseType();
            model.addRow(row);
        }
    }

    private void populateCountryCombo() {
        networkJComboBox.removeAllItems();
        for (Network country : system.getNetworkList()) {
            networkJComboBox.addItem(country);
        }
    }

    private void populateStateCombo(Network net) {
        stateJComboBox.removeAllItems();
        for (Network state : net.getSubnetworklist()) {
            stateJComboBox.addItem(state);
        }
    }

    private void populateCityCombo(Network net) {
        cityJComboBox.removeAllItems();
        for (Network city : net.getSubnetworklist()) {
            cityJComboBox.addItem(city);
        }


    }

    private void populateNetworkTree() {

        DefaultTreeModel tree = (DefaultTreeModel) networkJTree.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) tree.getRoot();
        root.removeAllChildren();
        DefaultMutableTreeNode networkNode;
        DefaultMutableTreeNode stateNode;
        DefaultMutableTreeNode cityNode;
        ArrayList<Network> networkList = system.getNetworkList();
        for (int i = 0; i < networkList.size(); i++) {
            Network country = networkList.get(i);
            networkNode = new DefaultMutableTreeNode(country.getNetworkname());
            root.insert(networkNode, i);
            ArrayList<Network> stateList = country.getSubnetworklist();
            DefaultMutableTreeNode enterpriseNode;
            for (int j = 0; j < stateList.size(); j++) {
                Network state = stateList.get(j);
                stateNode = new DefaultMutableTreeNode(state.getNetworkname());
                networkNode.insert(stateNode, j);
                ArrayList<Network> cityList = state.getSubnetworklist();
                for (int k = 0; k < cityList.size(); k++) {
                    Network city = cityList.get(k);
                    cityNode = new DefaultMutableTreeNode(city.getNetworkname());
                    stateNode.insert(cityNode, k);
                }
            }
        }
        tree.reload();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        submitJButton = new javax.swing.JButton();
        enterpriseNameJTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        networkJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        enterpriseTypeJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        networkJTree = new javax.swing.JTree();
        jLabel5 = new javax.swing.JLabel();
        stateJComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        cityJComboBox = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        InfoJTable = new javax.swing.JTable();
        refreshJButton = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(700, 700));

        jLabel1.setText("Select Network");

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Enter Enterprise Name");

        enterpriseTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterpriseTypeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseTypeJComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("Select Enterprise");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel4.setText("MANAGE ENTERPRISE");

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("System");
        networkJTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        networkJTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                networkJTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(networkJTree);

        jLabel5.setText("State");

        stateJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        stateJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateJComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setText("City");

        cityJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cityJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityJComboBoxActionPerformed(evt);
            }
        });

        InfoJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Enterprise Name", "Network", "Enterprise Type"
            }
        ));
        jScrollPane2.setViewportView(InfoJTable);

        refreshJButton.setText("refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(refreshJButton)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(139, 139, 139))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(backJButton))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(enterpriseTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(enterpriseNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(submitJButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(68, 68, 68)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(networkJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(stateJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cityJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(131, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(refreshJButton)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel1))
                                    .addComponent(networkJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(stateJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(cityJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(enterpriseTypeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addComponent(jLabel2))
                            .addComponent(enterpriseNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(submitJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backJButton)
                .addContainerGap(161, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        Enterprise.EnterpriseType entType = (Enterprise.EnterpriseType) enterpriseTypeJComboBox.getSelectedItem();
        if (entType.equals(Enterprise.EnterpriseType.RETAILER)) {

            Network citynet = (Network) cityJComboBox.getSelectedItem();

            for (Network country : system.getNetworkList()) {
                for (Network state : country.getSubnetworklist()) {
                    for (Network city : state.getSubnetworklist()) {
                        String name = enterpriseNameJTextField.getText();
                        if (city.getNetworkname().equalsIgnoreCase(String.valueOf(citynet))) {

                            Enterprise e = city.getEnterpriseDirectory().createAndAddEnterprise(name, Enterprise.EnterpriseType.RETAILER);
                            //e.setName(name);
                            populateEnterpriseNetworkTable(citynet);
                        }
                    }

                }
            }
            JOptionPane.showMessageDialog(null,"created successfully");
            //populateEnterpriseNetworkTable();
        }



    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        ((CardLayout) userProcessContainer.getLayout()).previous(userProcessContainer);

    }//GEN-LAST:event_backJButtonActionPerformed

    private void networkJTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_networkJTreeValueChanged
        // TODO add your handling code here:
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) networkJTree.getLastSelectedPathComponent();
        if (selectedNode != null) {
            for (Network country : system.getNetworkList()) {
                if (selectedNode.toString().equalsIgnoreCase((country.getNetworkname()))) {
                    network = country;
                    break;
                }
                for (Network state : country.getSubnetworklist()) {
                    if (selectedNode.toString().equalsIgnoreCase((state.getNetworkname()))) {
                        network = state;
                        break;
                    }
                }
            }
        } else {
            network = null;
        }

    }//GEN-LAST:event_networkJTreeValueChanged

    private void stateJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateJComboBoxActionPerformed
        // TODO add your handling code here:

        cityJComboBox.removeAll();
        Network n = (Network) stateJComboBox.getSelectedItem();
        if (n != null) {

            populateCityCombo(n);
        }

    }//GEN-LAST:event_stateJComboBoxActionPerformed

    private void enterpriseTypeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseTypeJComboBoxActionPerformed
        // TODO add your handling code here:
        if (Enterprise.EnterpriseType.AMAZON.equals((enterpriseTypeJComboBox.getSelectedItem()))) {
            enterpriseNameJTextField.setText("AMAZON");
            enterpriseNameJTextField.setEnabled(false);
        } else {
            enterpriseNameJTextField.setEnabled(true);
            enterpriseNameJTextField.setText("");
        }


    }//GEN-LAST:event_enterpriseTypeJComboBoxActionPerformed

    private void cityJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityJComboBoxActionPerformed
        // TODO add your handling code here:

        enterpriseTypeJComboBox.removeAll();
        Network n = (Network) cityJComboBox.getSelectedItem();
        if (n != null) {

            populateEnterpriseType();
        }

    }//GEN-LAST:event_cityJComboBoxActionPerformed

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed
        // TODO add your handling code here:
        stateJComboBox.setEnabled(true);
        stateJComboBox.removeAllItems();


        Network n = (Network) networkJComboBox.getSelectedItem();
        if (n != null) {

            populateStateCombo(n);
        }

    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        // TODO add your handling code here:
        //populateEnterpriseNetworkTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable InfoJTable;
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox cityJComboBox;
    private javax.swing.JTextField enterpriseNameJTextField;
    private javax.swing.JComboBox enterpriseTypeJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JTree networkJTree;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JComboBox stateJComboBox;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
