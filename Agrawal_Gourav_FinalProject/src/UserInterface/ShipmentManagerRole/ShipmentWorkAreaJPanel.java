/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ShipmentManagerRole;

import Business.EcoSystem;
import Business.Enterprise.AmazonEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.RetailerEnterprise;
import Business.Invoice.Invoice;
import Business.Network.Network;
import Business.Order.Order;
import Business.Organization.AmazonFinanceOrganization;
import Business.Organization.Organization;
import Business.Organization.ShipmentOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AmazonFinanceWorkRequest;
import Business.WorkQueue.OrderWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.sql.Timestamp;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gourav
 */
public class ShipmentWorkAreaJPanel extends javax.swing.JPanel {
private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private ShipmentOrganization sog;
    private Invoice invoice;
    private Order order;
    private RetailerEnterprise re;
    /**
     * Creates new form ShipmentWorkAreaJPanel
     */
    public ShipmentWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, ShipmentOrganization organization, RetailerEnterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.sog =organization;
        this.re=enterprise;
        
        populateTable();
    }
    
    OrderWorkRequest orderworkreq=null;
    
    
 private void populateTable(){
        DefaultTableModel model = (DefaultTableModel)shippmentWorkTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : sog.getWorkQueue().getWorkRequestList()){
            
            if(request instanceof OrderWorkRequest){
                
                orderworkreq=(OrderWorkRequest)request;
            
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getRequestDate();
            row[2] = request.getResolveDate();
            
            row[3] = request.getStatus();
            
            model.addRow(row);
        }
    }
 }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        processJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        shippmentWorkTable = new javax.swing.JTable();
        shippingStatusJField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        backjButton1 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel4.setText("SHIPPMENT MANAGER WORK AREA");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 11, -1, -1));

        processJButton.setText("Process");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 200, -1, -1));

        shippmentWorkTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Shipping id no", "Order arrived date", "processed date", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(shippmentWorkTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 500, 100));
        add(shippingStatusJField, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, 110, -1));

        jLabel1.setText("Shipping Status");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, -1, 30));

        backjButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });
        add(backjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        int selectedRow = shippmentWorkTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

           if(shippingStatusJField.equals("  ")){
            
            JOptionPane.showMessageDialog(null, "Please enter a status");
            return;
        }
        
         
        
        OrderWorkRequest request=(OrderWorkRequest)shippmentWorkTable.getValueAt(selectedRow, 0);
         
         String status= shippingStatusJField.getText();
         
         request.setStatus(status);
         
         java.util.Date date = new java.util.Date();
        Timestamp timestamp = new Timestamp(date.getTime());
        
        request.setResolveDate(timestamp);
        
        invoice= new Invoice();
//        invoice.setOrder(order);
        
                OrderWorkRequest orderWorkRequest= null;
        for(WorkRequest workReq: sog.getWorkQueue().getWorkRequestList()){
                
            if(workReq instanceof OrderWorkRequest){
                
                orderWorkRequest=(OrderWorkRequest)workReq;
                
                order= workReq.getOrder();
                
                
            }
            
        }
         
        invoice.setOrder(order);
        
        request.setInvoice(invoice);
        
        AmazonEnterprise amazonEnt= null;
        
        for(Network net : business.getNetworkList()){
            for(Enterprise ent : net.getEnterpriseDirectory().getEnterpriseList()){
                if( ent instanceof AmazonEnterprise){
                    
                    amazonEnt= (AmazonEnterprise)ent;
                    
                    AmazonFinanceOrganization amazonFinanceOrganization = null;
                    for(Organization org: amazonEnt.getOrganizationDirectory().getOrganizationList()){
                            
                        if(org instanceof AmazonFinanceOrganization){
                           
                          AmazonFinanceOrganization amazonForg=null;
                           
                          amazonForg=(AmazonFinanceOrganization)org;
                            
                             amazonForg.getWorkQueue().addWorkRequest(request);
                            
                        }
                        
                    }
                    
                    
                }
            
        
            }
        }
        
    
//         shippingOrganization.getWorkQueue().addWorkRequest(owwrr);
         populateTable();
                 
           

    }//GEN-LAST:event_processJButtonActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processJButton;
    private javax.swing.JTextField shippingStatusJField;
    private javax.swing.JTable shippmentWorkTable;
    // End of variables declaration//GEN-END:variables
}
